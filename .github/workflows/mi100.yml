name: mi100

on:
  pull_request:
    branches:
      - '2.x'

  # Allows manual execution
  workflow_dispatch:            

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: [mi100, rhel9]
    env:
       TEST_DIR: ${RUNNER_TEMP}/omniperf
       PYTHONPATH: /share/sw/omniperf/python-libs
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GH_PAT }}
      - name: Configure
        run: |
          mkdir build
          cd build
          ml cmake
          cmake -DENABLE_COVERAGE=ON ..
      - name: Install Python testing collateral
        run: pip3 install pytest pytest-cov mock junitparser
      - name: Create HIP binary (vcopy)
        run: hipcc -o tests/vcopy ./sample/vcopy.cpp
      - name: Run [profile] mode
        run: |
          cd build
          ml cmake
          srun -N 1 -J omniperf -p ci -t 00:10:00 ctest --verbose -R test_profiler_general
      - name: Run [analyze] mode
        if: '!cancelled()'
        run: |
          cd build
          ml cmake
          srun -N 1 -J omniperf -p ci -t 00:55:00 ctest --verbose -R test_analyze_commands
      - name: Aggregate Junit results
        if: '!cancelled()'
        run:
          junitparser merge tests/test-results-*.xml tests/test-results-aggregated.xml
      - name: Pytest coverage comment
        if: '!cancelled()'
        uses: MishaKav/pytest-coverage-comment@v1.1.48
        with:
          pytest-xml-coverage-path: 'tests/coverage.xml'
          junitxml-path: 'tests/test-results-aggregated.xml'
          coverage-path-prefix: src/
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/test/test-results-*.xml'